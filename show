project=project


#==================================================================
# This displays the folder where the build artifacts will be stored
#
# This function expect a YYYYMMDD_HHMMSS timestamp to be passed in
#==================================================================
get_artifact_folder()
{  
    # Fetch the timestamp from the command line
    local timestamp=$1

    # If there is a 2nd option in the command line, it's project name
    local project_name=$2
    test -z "$project_name" && project_name=$(basename $PWD)

    # Fetch the short hash of the most recent git commit
    local hash=$(git log -1 --pretty=format:"%H" | cut -c1-8)

    # And display the directory where our build artifacts will go
    echo $VIVADO_BUILD_FOLDER/${project_name}/${timestamp}_${hash}
}
#==================================================================


#==================================================================
# This copies the build artifacts to the artifact folder
#==================================================================
copy_build_artifacts()
{
    # Find the name of the artifact folder
    dest=$1

    # If there is a 2nd parameter, its the project name
    local project_name=$2
    test -z "$project_name" && project_name=$(basename $PWD)

    # Create the folder for the artifacts
    mkdir -p $dest

    # Determine which of our three build artifacts exist
    bitfile=$(find ${project}.runs/impl_1 | grep  "\.bit$")
    binfile=$(find ${project}.runs/impl_1 | grep  "\.bin$")
    ltxfile=$(find ${project}.runs/impl_1 | grep  "\.ltx$")

    # Copy each build artifact to the destination directory
    test -z $bitfile || cp $bitfile $dest/${project_name}.bit
    test -z $binfile || cp $binfile $dest/${project_name}.bin
    test -z $ltxfile || cp $ltxfile $dest/${project_name}.ltx
}
#==================================================================


timestamp=$(date +"%Y%m%d_%H%M%S")

artifact_folder=$(get_artifact_folder $timestamp)

copy_build_artifacts $artifact_folder







